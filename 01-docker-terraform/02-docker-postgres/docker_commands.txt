# fetch and run basic image
docker run --rm hello-world

# fetch and run ubuntu bash interactively with bash entry point
docker run -it --rm ubuntu bash

# build an image from current directy docker file
docker build -f Dockerfile -t build pandas:test .

# run the csv ingest script against the local db
URL="https://d37ci6vzurychx.cloudfront.net/trip-data/yellow_tripdata_2021-01.parquet"
python data-ingest-parquet.py \
  --host localhost \
  --port 5432 \
  --db ny_taxi \
  --schema taxi_trips \
  --table green_trips \
  --user postgres \
  --password postgres \
  --url=${URL}

# run the csv ingest script against the local db
URL="https://d37ci6vzurychx.cloudfront.net/misc/taxi_zone_lookup.csv"
python data-ingest-csv.py \
  --host localhost \
  --port 5432 \
  --db ny_taxi \
  --schema taxi_trips \
  --table taxi_zones \
  --user postgres \
  --password postgres \
  --url=${URL}

# DOCKERIZING THE INGEST SCRIPTS
# build the images
docker build -f Dockerfile_parquet -t parquet_ingest:v001 .
docker build -f Dockerfile_csv -t csv_ingest:v001 .

# run the container in the network
URL="https://d37ci6vzurychx.cloudfront.net/trip-data/yellow_tripdata_2021-01.parquet"
docker run --rm -it \
  --network 02-docker-postgres_default \
  parquet_ingest:v001 \
    --host database \
    --port 5432 \
    --db ny_taxi \
    --schema taxi_trips \
    --table yellow_taxi \
    --user root \
    --password root \
    --url=${URL}

URL="https://d37ci6vzurychx.cloudfront.net/misc/taxi_zone_lookup.csv"
docker run --rm -it \
  --network 02-docker-postgres_default \
  csv_ingest:v001 \
    --host database \
    --port 5432 \
    --db ny_taxi \
    --schema taxi_trips \
    --table taxi_zones \
    --user root \
    --password root \
    --url=${URL}